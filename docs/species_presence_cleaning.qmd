---
title: "Data Cleaning"
format: html
---

```{r}
#| message: false  

# Libraries
library(tidyverse)
library(janitor)
library(here)
```


## Species data

### Data exploration

Import the species csv files with the bird species information:

```{r}
species_csv <- read_csv(here::here("data/raw/ASDN_Daily_species.csv"))

```

This data set is stored in a wide format where each specie has its own column. This means that every time we discover a new species we will have to add a column. In addition, a bunch of `0` are stored in this table but do not really provide any information. According to the metadata:

```
The number of individuals seen is recorded for each species, except when individuals were not counted but the species was present (typically for very abundant species), an "X" is shown. The remaining columns list the full-name of species (birds and mammals) recorded for at least study site in at least one year.
```

This data model is not convenient for a database, we will have to switch to a long format.


### Data cleaning

```{r}
species_long <- species_csv %>% 
  pivot_longer(
    cols = !c(Year, Site, Date, Jdate, Num_observers,
              All_obs_reported, Observer_hours),
    names_to = "species",
    values_to = "species_count",
    values_transform = list(species_count = as.character)
  )
  
```


```{r}

```

We want to focus on the presence and absence of species and not the count. Let's create a new column for presence where anything else than 0 is considered present

```{r}

species_presence <- species_long %>% 
  mutate(species_presence = ifelse(species_count == "0", 0, 1))

```

We can remove some columns: "Num_observers", "All_obs_reported", "Observer_hours" are here to help to compute the effort of observation but since we just want presence and absence, we do not need it. We can also remove all the zeros values to reduce the size of our data set:

```{r}
species_presence <- species_presence %>% 
  select(-c(Num_observers, All_obs_reported, Observer_hours))
```

Last but not least, let's have a look at our species list

```{r}
species_presence %>% 
  filter(species_presence == 1) %>% 
  count(species) %>% 
  arrange(desc(n))
```

We have 319 species observed in this table. The "convention" seems to be that `_` are used to separate the different parts of a name. Note that it is not clear what type of nomenclature reference is used to pull those names from.

Let's write the presence table to a csv file:

```{r}
write_csv(species_presence, here::here("data/processed/species_presence.csv"))
```



